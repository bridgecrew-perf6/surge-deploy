{"componentChunkName":"component---src-templates-post-template-js","path":"/en-US/navigation/breadcrumb","result":{"data":{"current":{"frontmatter":{"title":"Breadcrumb","order":36,"brief":"Breadcrumbs allow users to make selections from a range of values and provide an auxiliary navigation that can return to previous page.","icon":"doc-breadcrumb"},"fields":{"type":"navigation"},"tableOfContents":{"items":[{"url":"#demos","title":"Demos","items":[{"url":"#how-to-import","title":"How to import"},{"url":"#basic-usage","title":"Basic Usage"},{"url":"#with-icons","title":"With Icons"},{"url":"#size","title":"Size"},{"url":"#custom-separator","title":"Custom Separator"},{"url":"#truncated-logic","title":"Truncated Logic"},{"url":"#custom-ellipsis","title":"Custom Ellipsis"},{"url":"#route-object","title":"Route Object"}]},{"url":"#api-reference","title":"API reference","items":[{"url":"#breadcrumb","title":"Breadcrumb"},{"url":"#breadcrumbitem","title":"Breadcrumb.Item"},{"url":"#route","title":"Route"}]},{"url":"#accessibility","title":"Accessibility"},{"url":"#design-tokens","title":"Design Tokens"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"localeCode\": \"en-US\",\n  \"order\": 36,\n  \"category\": \"Navigation\",\n  \"title\": \"Breadcrumb\",\n  \"subTitle\": \"Breadcrumb\",\n  \"icon\": \"doc-breadcrumb\",\n  \"brief\": \"Breadcrumbs allow users to make selections from a range of values and provide an auxiliary navigation that can return to previous page.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DesignToken = makeShortcode(\"DesignToken\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Demos\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"How to import\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import { Breadcrumb } from '@douyinfe/semi-ui';\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Basic Usage\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <Breadcrumb>\\n        <Breadcrumb.Item>Semi-ui</Breadcrumb.Item>\\n        <Breadcrumb.Item>Breadcrumb</Breadcrumb.Item>\\n        <Breadcrumb.Item>Default</Breadcrumb.Item>\\n    </Breadcrumb>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"With Icons\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb } from '@douyinfe/semi-ui';\\nimport { IconHome, IconArticle } from '@douyinfe/semi-icons';\\n\\n() => (\\n    <Breadcrumb>\\n        <Breadcrumb.Item icon={<IconHome />}></Breadcrumb.Item>\\n        <Breadcrumb.Item icon={<IconArticle />}>Breadcrumb</Breadcrumb.Item>\\n        <Breadcrumb.Item>With Icon</Breadcrumb.Item>\\n    </Breadcrumb>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Size\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can set the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compact\"), \" property to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" to increase the size of icons and texts.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb } from '@douyinfe/semi-ui';\\nimport { IconHome } from '@douyinfe/semi-icons';\\n\\n() => (\\n    <div>\\n        <Breadcrumb compact>\\n            <Breadcrumb.Item icon={<IconHome />}></Breadcrumb.Item>\\n            <Breadcrumb.Item>Breadcrumb</Breadcrumb.Item>\\n            <Breadcrumb.Item>Loose</Breadcrumb.Item>\\n        </Breadcrumb>\\n        <br/>\\n        <Breadcrumb compact={false}>\\n            <Breadcrumb.Item icon={<IconHome />}></Breadcrumb.Item>\\n            <Breadcrumb.Item>Breadcrumb</Breadcrumb.Item>\\n            <Breadcrumb.Item>Loose</Breadcrumb.Item>\\n        </Breadcrumb>\\n    </div>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Custom Separator\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Default separator is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb, Tag } from '@douyinfe/semi-ui';\\nimport { IconArrowRight } from '@douyinfe/semi-icons';\\n\\n() => (\\n    <div>\\n        <Breadcrumb separator={'>'}>\\n            <Breadcrumb.Item>Semi-ui</Breadcrumb.Item>\\n            <Breadcrumb.Item>Breadcrumb</Breadcrumb.Item>\\n            <Breadcrumb.Item>Default</Breadcrumb.Item>\\n        </Breadcrumb>\\n        <br/>\\n        <Breadcrumb separator={<IconArrowRight size={'small'} />}>\\n            <Breadcrumb.Item>Semi-ui</Breadcrumb.Item>\\n            <Breadcrumb.Item>Breadcrumb</Breadcrumb.Item>\\n            <Breadcrumb.Item>Default</Breadcrumb.Item>\\n        </Breadcrumb>\\n        <Tag>{`v>=1.16.0`}</Tag>\\n        <br/>\\n        <Breadcrumb size={'small'} >\\n            <Breadcrumb.Item separator=\\\":\\\">Semi-ui</Breadcrumb.Item>\\n            <Breadcrumb.Item>Breadcrumb</Breadcrumb.Item>\\n            <Breadcrumb.Item>Default</Breadcrumb.Item>\\n        </Breadcrumb>\\n    </div>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Truncated Logic\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"After \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"v0.34.0\"), \", the truncation happens if the text is overflowed. Default max-width is set to 150px. You could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"showTooltip\"), \" to customize ellipsis behavior.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb, Typography } from '@douyinfe/semi-ui';\\n\\n() => {\\n    const routes = ['Home', 'The is a very very very very long title', 'Detail'];\\n    const { Text } = Typography;\\n    return (\\n        <>\\n            <Text size=\\\"small\\\">Default</Text>\\n            <Breadcrumb\\n                routes={routes}\\n            />\\n            <br/>\\n            <Text size=\\\"small\\\">No tooltip</Text>\\n            <Breadcrumb\\n                showTooltip={false}\\n                routes={routes}\\n            />\\n            <br/>\\n            <Text size=\\\"small\\\">No truncation</Text>\\n            <Breadcrumb\\n                showTooltip={{width: 'auto'}}\\n                routes={routes}\\n            />\\n            <br/>\\n            <Text size=\\\"small\\\">Ellipsis from middle of text</Text>\\n            <Breadcrumb\\n                showTooltip={{ellipsisPos: 'middle'}}\\n                routes={routes}\\n            />\\n            <br/>\\n            <Text size=\\\"small\\\">Customize tooltip</Text>\\n            <Breadcrumb\\n                showTooltip={{opts: {position: 'topLeft'}}}\\n                routes={routes}\\n            />\\n        </>\\n    );\\n};\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When the path exceeds 4 levels, the second level to the penultimate one will be replaced by ellipsis. You can click the ellipsis to reveal all levels.\\nFor \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"v>=1.9.0\"), \" , you could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"maxItemCount\"), \" to set the number exceeded to trigger auto collapse.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <Breadcrumb>\\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\\n        <Breadcrumb.Item>Many levels</Breadcrumb.Item>\\n        <Breadcrumb.Item>Another level</Breadcrumb.Item>\\n        <Breadcrumb.Item>Another level again</Breadcrumb.Item>\\n        <Breadcrumb.Item>Here is another one</Breadcrumb.Item>\\n        <Breadcrumb.Item>Penultimate</Breadcrumb.Item>\\n        <Breadcrumb.Item>Detail</Breadcrumb.Item>\\n    </Breadcrumb>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Custom Ellipsis\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"There are two ellipsis area rendering types provided inside the component. You can set and select the desired rendering type through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"moreType\"), \". The optional values of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"moreType\"), \" are \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"default\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"popover\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <Breadcrumb moreType='popover'>\\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\\n        <Breadcrumb.Item>Many levels</Breadcrumb.Item>\\n        <Breadcrumb.Item>Another level</Breadcrumb.Item>\\n        <Breadcrumb.Item>Another level again</Breadcrumb.Item>\\n        <Breadcrumb.Item>Here is another one</Breadcrumb.Item>\\n        <Breadcrumb.Item>Penultimate</Breadcrumb.Item>\\n        <Breadcrumb.Item>Detail</Breadcrumb.Item>\\n    </Breadcrumb>\\n);\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you want to customize other forms of rendering for the ellipsis area, you can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"renderMore()\"), \" method.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Breadcrumb, Popover } from '@douyinfe/semi-ui';\\nimport { IconMore } from '@douyinfe/semi-icons';\\n\\nfunction Demo() {\\n    const separator = '-'; // Separator for splicing restItem array items\\n    const renderMore = restItem => {\\n        const content = (\\n            <>\\n                {\\n                    restItem.map((item, idx) => (\\n                        <React.Fragment key={`restItem-${idx}`}>\\n                            {item}\\n                            {idx !== restItem.length - 1 &&\\n                                <span style={{ color: 'var(--semi-color-text-2)', marginRight: '6px' }}>\\n                                    {separator}\\n                                </span>\\n                            }\\n                        </React.Fragment>\\n                    ))\\n                }\\n            </>\\n        );\\n        return (\\n            <Popover\\n                content={content}\\n                style={{ padding: 12 }}\\n                showArrow\\n            >\\n                <IconMore />\\n            </Popover>\\n        );\\n    };\\n    return (\\n        <>\\n            <Breadcrumb\\n                renderMore={restItem => renderMore(restItem)}\\n                onClick={(item, e) => console.log(item, e)}\\n            >\\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\\n                <Breadcrumb.Item>Many levels</Breadcrumb.Item>\\n                <Breadcrumb.Item>Another level</Breadcrumb.Item>\\n                <Breadcrumb.Item>Another level again</Breadcrumb.Item>\\n                <Breadcrumb.Item>Here is another one</Breadcrumb.Item>\\n                <Breadcrumb.Item>Penultimate</Breadcrumb.Item>\\n                <Breadcrumb.Item>Detail</Breadcrumb.Item>\\n            </Breadcrumb>\\n        </>\\n    );\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Route Object\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Breadcrumb supports passing in an array of strings or route objects consisting of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ name, path, href, icon }\"), \". You can also use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"renderItem\"), \" to render React.nodes. Breadcrumbs created in this way will also be truncated.\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"name\"), \": Name displayed, default with an empty string. When route passed in is a string only, it is set to name property.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"path\"), \": Routing path.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"href\"), \": Link destination and is mounted on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<a>\"), \" tag.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"icon\"), \": Icon displayed.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true hideInDSM\",\n    \"live\": \"true\",\n    \"hideInDSM\": true\n  }, \"import React from 'react';\\nimport { Breadcrumb } from '@douyinfe/semi-ui';\\nimport { IconHome, IconArticle } from '@douyinfe/semi-icons';\\n\\n() => (\\n    <div>\\n        <Breadcrumb\\n            routes={['Semi-ui', 'Breadcrumb', 'Default']}\\n        />\\n        <br/>\\n        <Breadcrumb\\n            routes={\\n                [\\n                    {\\n                        path: '/', \\n                        Href: '/', \\n                        icon: <IconHome />\\n                    },\\n                    { \\n                        path: '/breadcrumb', \\n                        href: '/components/breadcrumb', \\n                        name: 'breadcrumb', \\n                        icon: <IconArticle />\\n                    },\\n                    'with icon'\\n                ]\\n            }\\n        />\\n        <br/>\\n        <Breadcrumb\\n            routes={['Index', 'This is a very long level', 'Detail']}\\n        />\\n    </div>\\n);\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"API reference\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Breadcrumb\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"version\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"autoCollapse\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Toggle whether to auto collapse when exceed maxItemCount\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"true\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.9.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Class name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"compact\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Compact sizing\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"true\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"maxItemCount\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Set the number of item when reached to collapse\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.9.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"moreType\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"...area rendering type\\uFF0Cone of 'default'\\u3001'popover'\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'default'\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.27.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"renderItem\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Custom function, used with routes\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(Route: \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"#Route\"\n  }, \"Route\"), \") => React Node\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.27.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"renderMore\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Custom ... area rendering\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(restItem: ReactNode[]) => ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.27.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"routes\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Routing information, an array of route objects or strings, format reference: \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"#Route\"\n  }, \"Route\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Array<\", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"#Route\"\n  }, \"Route\"), \" \", \"|\", \" string\", \">\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"separator\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Customized delimiter\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'/'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"showTooltip\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Toggle whether to show tooltip if text overflowed. If passed in as an object: width, overflowed width; ellipsisPos, ways of truncation;  opts, passed directly to Tooltip component\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean \", \"|\", \" showToolTipProps\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"{width: 150, ellipsisPos: 'end', opts: { autoAdjustOverflow: true, position: \\\"bottomLeft\\\" }}\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.34.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"style\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Inline style\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CSSProperties\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onClick\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Click event\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(item: \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"#Route\"\n  }, \"Route\"), \", e: Event) => void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.27.0\")))), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Breadcrumb.Item\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"version\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"href\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Destinations for links\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"icon\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Displayed icon\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onClick\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Click event\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"function (item: Route, e: Event)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.27.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"separator\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Separator, used to override parent separator\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.16.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"noLink\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"To remove hover and active effect on an item\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"false\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.16.0\")))), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Route\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"version\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"href\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Link destinations\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.27.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"icon\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Displayed icon\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Routing name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"path\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Routing path\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"After \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"v>=1.16.0\"), \", other props in Breadcrumb.Item are also supported correspondingly.\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Accessibility\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Breadcrumb supports the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-label\"), \" props to indicate the function of the Breadcrumb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Breadcrumb will set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-current='page'\"), \" for the current item\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Design Tokens\"), mdx(DesignToken, {\n    mdxType: \"DesignToken\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"en-US/navigation/breadcrumb","next":{"fields":{"slug":"zh-CN/navigation/breadcrumb"},"id":"558dd555-7f21-55fa-935b-1ac7cdba0c59","frontmatter":{"title":"Breadcrumb 面包屑","localeCode":"zh-CN","icon":"doc-breadcrumb"}},"previous":{"fields":{"slug":"zh-CN/navigation/backtop"},"id":"333e9c1b-c2dd-5ae7-b87b-395d53a9f5e5","frontmatter":{"title":"BackTop 回到顶部","localeCode":"zh-CN","icon":"doc-backtop"}}}},"staticQueryHashes":["1348983216","1348983216","1477422646","2732170773","63159454"]}