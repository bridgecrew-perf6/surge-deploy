{"componentChunkName":"component---src-templates-post-template-js","path":"/en-US/show/popover","result":{"data":{"current":{"frontmatter":{"title":"Popover","order":54,"brief":"Click / mouse to move into the element and pop up the bubble card floating layer.","icon":"doc-popover"},"fields":{"type":"show"},"tableOfContents":{"items":[{"url":"#when-to-use","title":"When to Use"},{"url":"#demos","title":"Demos","items":[{"url":"#how-to-import","title":"How to import"},{"url":"#basic-usage","title":"Basic Usage"},{"url":"#pop-up-position","title":"Pop-up Position"},{"url":"#controlled-display","title":"Controlled Display"},{"url":"#show-small-triangle","title":"Show Small Triangle"},{"url":"#arrow-point-at-center","title":"Arrow Point at Center"},{"url":"#set-floating-layer-background-color","title":"Set Floating Layer Background Color"},{"url":"#use-with-tooltip-or-popconfirm","title":"Use with Tooltip or Popconfirm"}]},{"url":"#api-reference","title":"API Reference"},{"url":"#accessibility","title":"Accessibility","items":[{"url":"#aria","title":"ARIA"}]},{"url":"#design-tokens","title":"Design Tokens"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"localeCode\": \"en-US\",\n  \"order\": 54,\n  \"category\": \"Show\",\n  \"title\": \"Popover\",\n  \"subTitle\": \"Popover\",\n  \"icon\": \"doc-popover\",\n  \"brief\": \"Click / mouse to move into the element and pop up the bubble card floating layer.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DesignToken = makeShortcode(\"DesignToken\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"When to Use\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"When the target element has further description and related operations, it can be included in the card and displayed according to the user's operational behavior.\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The difference with Tooltip is that users can operate on elements on the floating layer, so it can carry more complex content, such as links or buttons.\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Demos\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"How to import\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"import\",\n    \"import\": true\n  }, \"import { Popover } from '@douyinfe/semi-ui';\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Basic Usage\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Popover, Tag } from '@douyinfe/semi-ui';\\n\\nfunction Demo() {\\n    return (\\n        <Popover\\n            content={\\n                <article style={{ padding: 12 }}>\\n                    Hi ByteDancer, this is a popover.\\n                    <br /> We have 2 lines.\\n                </article>\\n            }\\n        >\\n            <Tag>Hover here</Tag>\\n        </Popover>\\n    );\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Pop-up Position\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Support twelve directions.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Popover, Tag } from '@douyinfe/semi-ui';\\n\\nfunction Demo() {\\n    const tops = [\\n        ['topLeft', 'TL'],\\n        ['top', 'Top'],\\n        ['topRight', 'TR'],\\n    ];\\n    const lefts = [\\n        ['leftTop', 'LT'],\\n        ['left', 'Left'],\\n        ['leftBottom', 'LB'],\\n    ];\\n    const rights = [\\n        ['rightTop', 'RT'],\\n        ['right', 'Right'],\\n        ['rightBottom', 'RB'],\\n    ];\\n    const bottoms = [\\n        ['bottomLeft', 'BL'],\\n        ['bottom', 'Bottom'],\\n        ['bottomRight', 'BR'],\\n    ];\\n\\n    return (\\n        <div style={{ paddingLeft: 40 }} className=\\\"tag-margin-right\\\">\\n            <div style={{ marginLeft: 40, whiteSpace: 'nowrap' }}>\\n                {tops.map((pos, index) => (\\n                    <Popover\\n                        content={\\n                            <article style={{ padding: 12 }}>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ width: 40, float: 'left' }}>\\n                {lefts.map((pos, index) => (\\n                    <Popover\\n                        content={\\n                            <article style={{ padding: 12 }}>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ width: 40, marginLeft: 180 }}>\\n                {rights.map((pos, index) => (\\n                    <Popover\\n                        content={\\n                            <article style={{ padding: 12 }}>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ marginLeft: 40, clear: 'both', whiteSpace: 'nowrap' }}>\\n                {bottoms.map((pos, index) => (\\n                    <Popover\\n                        content={\\n                            <article style={{ padding: 12 }}>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n        </div>\\n    );\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Controlled Display\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"In this scenario, Popover's display is completely at the control of parameter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"visible\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Popover, Button } from '@douyinfe/semi-ui';\\n\\nclass App extends React.Component {\\n    constructor(props = {}) {\\n        super(props);\\n\\n        this.state = {\\n            visible: false,\\n        };\\n\\n        this.content = (\\n            <article style={{ padding: 12 }}>\\n                Hi ByteDancer, this is a popover.\\n                <br /> We have 2 lines.\\n            </article>\\n        );\\n\\n        this.toggleShow = this.toggleShow.bind(this);\\n    }\\n\\n    toggleShow() {\\n        this.setState({\\n            visible: !this.state.visible,\\n        });\\n    }\\n\\n    render() {\\n        const content = this.content;\\n\\n        const { visible } = this.state;\\n\\n        return (\\n            <div>\\n                <div>\\n                    <Popover visible={visible} content={content} trigger=\\\"custom\\\">\\n                        <Button onClick={this.toggleShow}>Click me</Button>\\n                    </Popover>\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Show Small Triangle\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Version: >= 0.19.0\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Popover also supports the display of a small triangle.\"), mdx(\"blockquote\", {\n    parentName: \"section\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The floating layer in this mode has a default style that you can overwrite by passing the style parameters.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Popover, Tag } from '@douyinfe/semi-ui';\\n\\nfunction Demo() {\\n    const tops = [\\n        ['topLeft', 'TL'],\\n        ['top', 'Top'],\\n        ['topRight', 'TR'],\\n    ];\\n    const lefts = [\\n        ['leftTop', 'LT'],\\n        ['left', 'Left'],\\n        ['leftBottom', 'LB'],\\n    ];\\n    const rights = [\\n        ['rightTop', 'RT'],\\n        ['right', 'Right'],\\n        ['rightBottom', 'RB'],\\n    ];\\n    const bottoms = [\\n        ['bottomLeft', 'BL'],\\n        ['bottom', 'Bottom'],\\n        ['bottomRight', 'BR'],\\n    ];\\n\\n    return (\\n        <div style={{ paddingLeft: 40 }} className=\\\"tag-margin-right\\\">\\n            <div style={{ marginLeft: 40, whiteSpace: 'nowrap' }}>\\n                {tops.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ width: 40, float: 'left' }}>\\n                {lefts.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ width: 40, marginLeft: 180 }}>\\n                {rights.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ marginLeft: 40, clear: 'both', whiteSpace: 'nowrap' }}>\\n                {bottoms.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n        </div>\\n    );\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Arrow Point at Center\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Version: >= 0.34.0\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Under the condition of \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"showArrow=true\"), \", you can pass in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"arrowPointAtCenter=true\"), \" so that the small triangle always points to the center of the element.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Popover, Tag } from '@douyinfe/semi-ui';\\n\\nfunction Demo() {\\n    const tops = [\\n        ['topLeft', 'TL'],\\n        ['top', 'Top'],\\n        ['topRight', 'TR'],\\n    ];\\n    const lefts = [\\n        ['leftTop', 'LT'],\\n        ['left', 'Left'],\\n        ['leftBottom', 'LB'],\\n    ];\\n    const rights = [\\n        ['rightTop', 'RT'],\\n        ['right', 'Right'],\\n        ['rightBottom', 'RB'],\\n    ];\\n    const bottoms = [\\n        ['bottomLeft', 'BL'],\\n        ['bottom', 'Bottom'],\\n        ['bottomRight', 'BR'],\\n    ];\\n\\n    return (\\n        <div style={{ paddingLeft: 40 }} className=\\\"tag-margin-right\\\">\\n            <div style={{ marginLeft: 40, whiteSpace: 'nowrap' }}>\\n                {tops.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        arrowPointAtCenter\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ width: 40, float: 'left' }}>\\n                {lefts.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        arrowPointAtCenter\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ width: 40, marginLeft: 180 }}>\\n                {rights.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        arrowPointAtCenter\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n            <div style={{ marginLeft: 40, clear: 'both', whiteSpace: 'nowrap' }}>\\n                {bottoms.map((pos, index) => (\\n                    <Popover\\n                        showArrow\\n                        arrowPointAtCenter\\n                        content={\\n                            <article>\\n                                Hi ByteDancer, this is a popover.\\n                                <br /> We have 2 lines.\\n                            </article>\\n                        }\\n                        position={Array.isArray(pos) ? pos[0] : pos}\\n                        key={index}\\n                    >\\n                        <Tag>{Array.isArray(pos) ? pos[1] : pos}</Tag>\\n                    </Popover>\\n                ))}\\n            </div>\\n        </div>\\n    );\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Set Floating Layer Background Color\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you need to customize the background color or border color of the floating layer, please \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Be sure to set \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"backgroundColor\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"borderColor\"), \" properties in \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"style\"), \" separately.\"), \" This enables the \\\"small triangle\\\" to apply the same background color and border color.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Popover, Tag } from '@douyinfe/semi-ui';\\n\\nfunction Demo() {\\n    return (\\n        <Popover\\n            content={\\n                <article style={{ padding: 4 }}>\\n                    Hi ByteDancer, this is a popover.\\n                    <br /> We have 2 lines.\\n                </article>\\n            }\\n            trigger=\\\"custom\\\"\\n            position='right'\\n            visible\\n            showArrow\\n            style={{\\n                backgroundColor: 'rgb(0,119,250)',\\n                borderColor: 'rgb(0,98,214)',\\n                color: 'rgb(255,255,255)',\\n                borderWidth: 1,\\n                borderStyle: 'solid',\\n            }}\\n        >\\n            <Tag>Click here</Tag>\\n        </Popover>\\n    );\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Use with Tooltip or Popconfirm\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Please refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/en-US/show/tooltip#%E6%90%AD%E9%85%8D%20Popover%20%E6%88%96%20Popconfirm%20%E4%BD%BF%E7%94%A8\"\n  }, \"Use with Tooltip/Popconfirm\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"API Reference\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Version\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"autoAdjustOverflow\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether to automatically adjust the expansion direction of the floating layer for automatic adjustment of the expansion direction during edge occlusion\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"true\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"arrowPointAtCenter\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether the \\\"small triangle\\\" points to the center of the element, you need to pass in \\\"showArrow = true\\\" at the same time\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"true\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"0.34.0\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"content\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Content displayed\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string \", \"|\", \" ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"clickToHide\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether to automatically close the elastic layer when clicking on the floating layer and any element inside\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"false\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"0.24.0\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"getPopupContainer\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Specifies the parent DOM, and the bullet layer will be rendered to the DOM, you need to set 'position: relative`\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"() => HTMLElement\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"() => document.body\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"mouseEnterDelay\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"After the mouse is moved in, the display delay time, in milliseconds (only effective when the trigger is hover/focus)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"50\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"mouseLeaveDelay\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"The time for the delay to disappear after the mouse is moved out, in milliseconds (only effective when the trigger is hover/focus)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"50\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"rePosKey\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"You can update the value of this item to manually trigger the repositioning of the pop-up layer\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\", \"|\", \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"visible\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Display popup or not\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"position\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Directions, optional values: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"top\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"topLeft\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"topRight\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"leftTop\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"leftBottom\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rightTop\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rightTop\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rightBottom\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"bottomLeft\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"bottomRight\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"bottomRight\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\\"bottom\\\"\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"spacing\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"The distance between the out layer and the children element, in px\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"4(while showArrow=false) 10(while showArrow=true)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"showArrow\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Display little arrow or not\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"trigger\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Trigger mode, optional value: \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"hover\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"focus\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"click\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"custom\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"'hover'\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"stopPropagation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether to prevent click events on the bomb layer from bubbling\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"false\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"0.34.0\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"zIndex\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Floating layer z-index value\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1030\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onVisibleChange\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"A callback triggered when the pop-up layer is displayed / hidden\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(isVisble: boolean) => void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onClickOutSide\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback when the pop-up layer is in the display state and the non-Children, non-floating layer inner area is clicked (only valid when trigger is custom, click)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(e:event) => void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"2.1.0\")))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Accessibility\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"ARIA\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"About role\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the trigger is set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"click\"), \"\\u3001\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"custom\"), \", the PopoverContent element has role set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dialog\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If the trigger is set to hover, it has role set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tooltip\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Popover's content\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The content wrapper will be automatically added with the id attribute\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Popover's children \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will be automatically added \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3.org/TR/wai-aria-1.1/#aria-expanded\"\n  }, \"aria-expanded\"), \" attribute, when Popover is visible, the attribute value is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \", when invisible Is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will be automatically added \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup\"\n  }, \"aria-haspopup\"), \" attribute, which is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dialog\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Will be automatically added \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.w3.org/TR/wai-aria-1.1/#aria-controls\"\n  }, \"aria-controls\"), \" attribute, which is the id of the content wrapper\"))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Design Tokens\"), mdx(DesignToken, {\n    mdxType: \"DesignToken\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"en-US/show/popover","next":{"fields":{"slug":"zh-CN/show/popover"},"id":"a93c146f-bd76-5ed9-80b6-c8053fa3a89c","frontmatter":{"title":"Popover 气泡卡片","localeCode":"zh-CN","icon":"doc-popover"}},"previous":{"fields":{"slug":"zh-CN/show/overflowlist"},"id":"04cef0ff-4b37-5bfd-8897-3d7c2b361678","frontmatter":{"title":"OverflowList 折叠列表","localeCode":"zh-CN","icon":"doc-overflowList"}}}},"staticQueryHashes":["1348983216","1348983216","1477422646","2732170773","63159454"]}