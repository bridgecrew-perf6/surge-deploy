{"componentChunkName":"component---src-templates-post-template-js","path":"/en-US/show/avatar","result":{"data":{"current":{"frontmatter":{"title":"Avatar","order":42,"brief":"Avatar, used for image or text display.","icon":"doc-avatar"},"fields":{"type":"show"},"tableOfContents":{"items":[{"url":"#demos","title":"Demos","items":[{"url":"#how-to-import","title":"How to import"},{"url":"#size","title":"Size"},{"url":"#color","title":"Color"},{"url":"#image","title":"Image"},{"url":"#shape","title":"Shape"},{"url":"#event","title":"Event"},{"url":"#avatargroup","title":"AvatarGroup"}]},{"url":"#accessibility","title":"Accessibility"},{"url":"#api-reference","title":"API Reference","items":[{"url":"#avatar","title":"Avatar"},{"url":"#avatargroup-1","title":"AvatarGroup"}]},{"url":"#design-tokens","title":"Design Tokens"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"localeCode\": \"en-US\",\n  \"order\": 42,\n  \"category\": \"Show\",\n  \"title\": \"Avatar\",\n  \"subTitle\": \"avatar\",\n  \"icon\": \"doc-avatar\",\n  \"brief\": \"Avatar, used for image or text display.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar DesignToken = makeShortcode(\"DesignToken\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Demos\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"How to import\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"import\",\n    \"import\": true\n  }, \"import { Avatar, AvatarGroup } from '@douyinfe/semi-ui';\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Size\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can change the size of the avatars with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" property. The following sizes are supported:  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extra-extra-small\"), \"(20x20), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extra-small\"), \"(24x24),\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"small\"), \"(32x32), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"default\"), \"(40x40), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"medium\"), \"(48x48), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"large\"), \"(72x72), \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"extra-large\"), \"(128 x 128).\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <Avatar size=\\\"extra-extra-small\\\" style={{ margin: 4 }}>\\n            U\\n        </Avatar>\\n        <Avatar size=\\\"extra-small\\\" style={{ margin: 4 }}>\\n            U\\n        </Avatar>\\n        <Avatar size=\\\"small\\\" style={{ margin: 4 }}>\\n            U\\n        </Avatar>\\n        <Avatar size=\\\"default\\\" style={{ margin: 4 }}>\\n            U\\n        </Avatar>\\n        <Avatar style={{ margin: 4 }}>U</Avatar>\\n        <Avatar size=\\\"large\\\" style={{ margin: 4 }}>\\n            U\\n        </Avatar>\\n        <Avatar size=\\\"extra-large\\\" style={{ margin: 4 }}>\\n            U\\n        </Avatar>\\n    </div>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Color\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Avatars support 16 colors including \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"white\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"amber\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blue\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cyan\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"green\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grey\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"indigo\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"light-blue\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"light-green\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lime\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"orange\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pink\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"purple\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"red\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"teal\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"violet\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yellow\"), \". You can also use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"style\"), \" prop to customize styles. The default color is\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grey\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <Avatar style={{ margin: 4 }}>AS</Avatar>\\n        <Avatar color=\\\"red\\\" style={{ margin: 4 }}>\\n            BM\\n        </Avatar>\\n        <Avatar color=\\\"light-blue\\\" style={{ margin: 4 }}>\\n            TJ\\n        </Avatar>\\n        <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf', margin: 4 }}>ZL</Avatar>\\n        <Avatar style={{ backgroundColor: '#87d068', margin: 4 }}>YZ</Avatar>\\n    </div>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Image\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Image avatars can be created by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"srcSet\"), \" prop.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <Avatar\\n            alt=\\\"a cat\\\"\\n            src=\\\"https://sf6-cdn-tos.douyinstatic.com/obj/eden-cn/ptlz_zlp/ljhwZthlaukjlkulzlp/root-web-sites/avatarDemo.jpeg\\\"\\n            style={{ margin: 4 }}\\n        />\\n        <Avatar\\n            alt=\\\"a cat\\\"\\n            size=\\\"small\\\"\\n            src=\\\"https://sf6-cdn-tos.douyinstatic.com/obj/eden-cn/ptlz_zlp/ljhwZthlaukjlkulzlp/root-web-sites/avatarDemo.jpeg\\\"\\n            style={{ margin: 4 }}\\n        />\\n    </div>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Shape\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Avatars support two shapes: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"circle\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"square\"), \". The shape is default to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"circle\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <Avatar style={{ margin: 4 }}>U</Avatar>\\n        <Avatar shape=\\\"square\\\" style={{ margin: 4 }}>\\n            U\\n        </Avatar>\\n    </div>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Event\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Avatars support \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onClick\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onMouseEnter\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onMouseLeave\"), \". You can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hoverMask\"), \" prop to pass in overlay content for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hover\"), \" state.\\nThe overlay has no default style.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar } from '@douyinfe/semi-ui';\\nimport { IconCamera } from '@douyinfe/semi-icons';\\n\\n() => {\\n    const style = {\\n        backgroundColor: 'rgba(0,0,0,.4)',\\n        height: '100%',\\n        width: '100%',\\n        display: 'flex',\\n        alignItems: 'center',\\n        justifyContent: 'center',\\n    };\\n    const hover = (\\n        <div style={style}>\\n            <IconCamera />\\n        </div>\\n    );\\n\\n    return (\\n        <Avatar hoverMask={hover} color=\\\"red\\\">\\n            BD\\n        </Avatar>\\n    );\\n};\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"AvatarGroup\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AvatarGroup\"), \" component to display avatars as a group.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar, AvatarGroup } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <AvatarGroup>\\n            <Avatar color=\\\"red\\\">LL</Avatar>\\n            <Avatar>CX</Avatar>\\n            <Avatar color=\\\"amber\\\">RM</Avatar>\\n            <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>ZL</Avatar>\\n            <Avatar style={{ backgroundColor: '#87d068' }}>YZ</Avatar>\\n        </AvatarGroup>\\n    </div>\\n);\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can set the number of avatars to display with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"maxCount\"), \" property.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar, AvatarGroup } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <AvatarGroup maxCount={3}>\\n            <Avatar color=\\\"red\\\">LL</Avatar>\\n            <Avatar>CX</Avatar>\\n            <Avatar color=\\\"amber\\\">RM</Avatar>\\n            <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>ZL</Avatar>\\n            <Avatar style={{ backgroundColor: '#87d068' }}>YZ</Avatar>\\n        </AvatarGroup>\\n    </div>\\n);\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can customize the more tag with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"renderMore\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar, AvatarGroup, Popover } from '@douyinfe/semi-ui';\\n\\nfunction Demo() {\\n    const renderMore = (restNumber, restAvatars) => {\\n        const content = (\\n            restAvatars.map((avatar, index) => {\\n                return (\\n                    <div style={{ paddingBottom: '12px' }} key={index}>\\n                        {React.cloneElement(avatar, { size: 'extra-small' })}\\n                        <span style={{ marginLeft: 8, fontSize: 14 }}>This is a sentence</span>\\n                    </div>\\n                );\\n            })\\n        );\\n        return (\\n            <Popover content={content} autoAdjustOverflow={false} position={'bottomRight'} style={{ padding: '12px 8px', paddingBottom: 0 }}>\\n                <Avatar>\\n                    {`+${restNumber}`}\\n                </Avatar>\\n            </Popover>\\n        );\\n    };\\n\\n    return (\\n        <AvatarGroup maxCount={3} renderMore={renderMore}>\\n            <Avatar color='red'>LL</Avatar>\\n            <Avatar >CX</Avatar>\\n            <Avatar color='amber'>RM</Avatar>\\n            <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>ZL</Avatar>\\n            <Avatar style={{ backgroundColor: '#87d068' }} >YZ</Avatar>\\n        </AvatarGroup>\\n    );\\n}\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can set the coverage direction of the avatars with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"overlapFrom\"), \". It has two optional values A and B. The default value is \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"start\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true\",\n    \"live\": \"true\"\n  }, \"import React from 'react';\\nimport { Avatar, AvatarGroup } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <div>\\n        <div>\\n            <AvatarGroup overlapFrom={'start'}>\\n                <Avatar color=\\\"red\\\">LL</Avatar>\\n                <Avatar>CX</Avatar>\\n                <Avatar color=\\\"amber\\\">RM</Avatar>\\n                <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>ZL</Avatar>\\n                <Avatar style={{ backgroundColor: '#87d068' }}>YZ</Avatar>\\n            </AvatarGroup>\\n        </div>\\n        <div>\\n            <AvatarGroup overlapFrom={'end'}>\\n                <Avatar color=\\\"red\\\">LL</Avatar>\\n                <Avatar>CX</Avatar>\\n                <Avatar color=\\\"amber\\\">RM</Avatar>\\n                <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>ZL</Avatar>\\n                <Avatar style={{ backgroundColor: '#87d068' }}>YZ</Avatar>\\n            </AvatarGroup>\\n        </div>\\n    </div>\\n);\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Accessibility\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"alt\"), \"\\uFF1AWhen using a picture avatar, please use the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"alt\"), \" attribute to explain the content of the picture\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import React from 'react';\\nimport { Avatar } from '@douyinfe/semi-ui';\\n\\n() => {\\n    return (\\n        <>\\n            {/* Good case */ }\\n            <Avatar\\n                alt=\\\"A cut cat\\\"\\n                src=\\\"https://sf6-cdn-tos.douyinstatic.com/obj/eden-cn/ptlz_zlp/ljhwZthlaukjlkulzlp/root-web-sites/avatarDemo.jpeg\\\"\\n                style={{ margin: 4 }}\\n            />\\n            <Avatar\\n                alt=\\\"Jiang Pengzhi\\\"\\n                src=\\\"https://sf6-cdn-tos.douyinstatic.com/obj/eden-cn/ptlz_zlp/ljhwZthlaukjlkulzlp/root-web-sites/avatarDemo.jpeg\\\"\\n                style={{ margin: 4 }}\\n            />\\n            {/* Bad case: empty content */ }\\n            <Avatar\\n                alt=\\\"\\\"\\n                src=\\\"https://sf6-cdn-tos.douyinstatic.com/obj/eden-cn/ptlz_zlp/ljhwZthlaukjlkulzlp/root-web-sites/avatarDemo.jpeg\\\"\\n                style={{ margin: 4 }}\\n            />\\n            {/* Bad case: no need to include picture or image in alt */ }\\n            <Avatar\\n                alt=\\\"Picture of Jiang Pengzhi\\\"\\n                src=\\\"https://sf6-cdn-tos.douyinstatic.com/obj/eden-cn/ptlz_zlp/ljhwZthlaukjlkulzlp/root-web-sites/avatarDemo.jpeg\\\"\\n                style={{ margin: 4 }}\\n            />\\n        </>\\n    );\\n};\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"API Reference\"), mdx(\"hr\", {\n    parentName: \"section\"\n  }), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Avatar\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"alt\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Defines an alternative text description of the image.\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Class name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"color\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Color of the avatar, one of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"amber\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"blue\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"cyan\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"green\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"grey\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"indigo\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"light-blue\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"light-green\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"lime\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"orange\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"pink\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"rain\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"red\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"teal\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"violet\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"yellow\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"white\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"grey\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"hoverMask\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Avatar content overlay when hover\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"imgAttr\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Native html img attributes \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \">=1.5.0\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"React.ImgHTMLAttributes<HTMLImageElement\", \">\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"shape\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shape of the avatar, one of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"circle\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"square\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"circle\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"size\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Size of the avatar, one of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"extra-extra-small\"), \",\", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"extra-small\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"small\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"default\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"medium\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"large\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"extra-large\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"medium\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"src\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Resource address for imgage avatars\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"srcSet\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Set the image avatar responsive resource address\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"style\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Style name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CSSProperties\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onClick\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Click the callback of the avatar.\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(e: Event) => void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onError\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Image load failed event, returning false closes the default fallback behavior of the component\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(e: Event) = > boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onMouseEnter\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback to onMouseEnter event\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(e: Event) => void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onMouseLeave\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback to onMouseLeave event\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(e: Event) => void\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")))), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"AvatarGroup\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"maxCount\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Display +N when the number of avatars exceeds this value\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"overlapFrom\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Set the coverage direction of the avatars, one of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"start\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"end\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"start\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"renderMore\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Customize the more tag\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"(restNumber: number, restAvatars: ReactNode[]) => ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"shape\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Shape of the avatar, one of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"circle\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"square\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"circle\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"size\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Size of the avatar, one of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"extra-extra-small\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"extra-small\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"small\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"default\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"medium\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"large\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"extra-large\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"medium\")))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Design Tokens\"), mdx(DesignToken, {\n    mdxType: \"DesignToken\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"en-US/show/avatar","next":{"fields":{"slug":"zh-CN/show/avatar"},"id":"8aebda77-08dc-580c-827a-b57461a5097a","frontmatter":{"title":"Avatar 头像","localeCode":"zh-CN","icon":"doc-avatar"}},"previous":{"fields":{"slug":"zh-CN/navigation/tree"},"id":"ff966d39-34fc-5023-9b45-6462217f5d9d","frontmatter":{"title":"Tree 树形控件","localeCode":"zh-CN","icon":"doc-tree"}}}},"staticQueryHashes":["1348983216","1348983216","1477422646","2732170773","63159454"]}