{"componentChunkName":"component---src-templates-post-template-js","path":"/en-US/show/calendar","result":{"data":{"current":{"frontmatter":{"title":"Calendar","order":44,"brief":"A container that displays data in calendar form.","icon":"doc-calendar"},"fields":{"type":"show"},"tableOfContents":{"items":[{"url":"#demos","title":"Demos","items":[{"url":"#how-to-import","title":"How to import"},{"url":"#day-mode","title":"Day Mode"},{"url":"#week-mode","title":"Week Mode"},{"url":"#month-mode","title":"Month Mode"},{"url":"#range-mode","title":"Range Mode"},{"url":"#render-events","title":"Render Events"},{"url":"#custom-render","title":"Custom Render","items":[{"url":"#custom-render-events","title":"Custom Render Events"},{"url":"#customized-date-cell-style","title":"Customized Date Cell Style"}]}]},{"url":"#api-reference","title":"API Reference","items":[{"url":"#calendar","title":"Calendar"},{"url":"#event-object","title":"Event Object"}]},{"url":"#design-tokens","title":"Design Tokens"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"localeCode\": \"en-US\",\n  \"order\": 44,\n  \"category\": \"Show\",\n  \"title\": \"Calendar\",\n  \"subTitle\": \"Calendar\",\n  \"icon\": \"doc-calendar\",\n  \"dir\": \"column\",\n  \"brief\": \"A container that displays data in calendar form.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Notice = makeShortcode(\"Notice\");\nvar DesignToken = makeShortcode(\"DesignToken\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Demos\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"How to import\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"import\",\n    \"import\": true\n  }, \"import { Calendar } from '@douyinfe/semi-ui';\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Day Mode\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Day mode. You could toggle the red line of current time using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"showCurrTime\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true dir=\\\"column\\\"\",\n    \"live\": \"true\",\n    \"dir\": \"\\\"column\\\"\"\n  }, \"import React from 'react';\\nimport { Calendar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <Calendar mode=\\\"day\\\"></Calendar>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Week Mode\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Week mode. You could toggle the red line of current time using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"showCurrTime\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true dir=\\\"column\\\"\",\n    \"live\": \"true\",\n    \"dir\": \"\\\"column\\\"\"\n  }, \"import React from 'react';\\nimport { Calendar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <Calendar mode=\\\"week\\\"></Calendar>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Month Mode\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Month Mode.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true dir=\\\"column\\\"\",\n    \"live\": \"true\",\n    \"dir\": \"\\\"column\\\"\"\n  }, \"import React from 'react';\\nimport { Calendar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <Calendar mode=\\\"month\\\"></Calendar>\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Range Mode\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \">=1.5.0\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Range Mode. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"range\"), \" is required which is a left-closed and right-open interval. \"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true dir=\\\"column\\\"\",\n    \"live\": \"true\",\n    \"dir\": \"\\\"column\\\"\"\n  }, \"import React from 'react';\\nimport { Calendar } from '@douyinfe/semi-ui';\\n\\n() => (\\n    <Calendar mode=\\\"range\\\" range={[new Date(2020, 8, 26), new Date(2020, 8, 31)]} />\\n);\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Render Events\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You could pass in an array of event objects to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"events\"), \" to render items. For detailed format, refer to API below.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true dir=\\\"column\\\"\",\n    \"live\": \"true\",\n    \"dir\": \"\\\"column\\\"\"\n  }, \"import React from 'react';\\nimport { Calendar, RadioGroup, Radio } from '@douyinfe/semi-ui';\\n\\nclass Demo extends React.Component {\\n    constructor() {\\n        super();\\n        this.state = {\\n            mode: 'week',\\n        };\\n    }\\n\\n    onSelect(e) {\\n        this.setState({\\n            mode: e.target.value,\\n        });\\n    }\\n    render() {\\n        const { mode } = this.state;\\n        const isMonthView = mode === 'month';\\n        const dailyEventStyle = {\\n            borderRadius: '3px',\\n            boxSizing: 'border-box',\\n            border: 'var(--semi-color-primary) 1px solid',\\n            padding: '10px',\\n            backgroundColor: 'var(--semi-color-primary-light-default)',\\n            height: '100%',\\n            overflow: 'hidden',\\n        };\\n        const allDayStyle = {\\n            borderRadius: '3px',\\n            boxSizing: 'border-box',\\n            border: 'var(--semi-color-bg-1) 1px solid',\\n            padding: '2px 4px',\\n            backgroundColor: 'var(--semi-color-primary-light-active)',\\n            height: '100%',\\n            overflow: 'hidden',\\n        };\\n        const dailyStyle = isMonthView ? allDayStyle : dailyEventStyle;\\n        const events = [\\n            {\\n                key: '0',\\n                start: new Date(2019, 5, 25, 14, 45, 0),\\n                end: new Date(2019, 6, 26, 6, 18, 0),\\n                children: <div style={dailyStyle}>June 25th 14:45 ~ July 26th 6:18</div>,\\n            },\\n            {\\n                key: '1',\\n                start: new Date(2019, 6, 18, 10, 0, 0),\\n                end: new Date(2019, 6, 30, 8, 0, 0),\\n                children: <div style={allDayStyle}>July 18th 10:00 ~ July 30th 8:00</div>,\\n            },\\n            {\\n                key: '2',\\n                start: new Date(2019, 6, 19, 20, 0, 0),\\n                end: new Date(2019, 6, 23, 14, 0, 0),\\n                children: <div style={allDayStyle}>July 19th 20:00 ~ July 23rd 14:00</div>,\\n            },\\n            {\\n                key: '3',\\n                start: new Date(2019, 6, 21, 6, 0, 0),\\n                end: new Date(2019, 6, 25, 6, 0, 0),\\n                children: <div style={allDayStyle}>July 21st 6:00 ~ July 25th 6:00</div>,\\n            },\\n            {\\n                key: '4',\\n                allDay: true,\\n                start: new Date(2019, 6, 22, 8, 0, 0),\\n                children: <div style={allDayStyle}>July 22 full day</div>,\\n            },\\n            {\\n                key: '5',\\n                start: new Date(2019, 6, 22, 9, 0, 0),\\n                end: new Date(2019, 6, 23, 23, 0, 0),\\n                children: <div style={allDayStyle}>July 22nd 9:00 ~ July 23rd 23:00</div>,\\n            },\\n            {\\n                key: '6',\\n                start: new Date(2019, 6, 23, 8, 32, 0),\\n                children: <div style={dailyStyle}>July 23 8:32</div>,\\n            },\\n            {\\n                key: '7',\\n                start: new Date(2019, 6, 23, 14, 30, 0),\\n                end: new Date(2019, 6, 23, 20, 0, 0),\\n                children: <div style={dailyStyle}>July 23 14:30-20:00</div>,\\n            },\\n            {\\n                key: '8',\\n                start: new Date(2019, 6, 25, 8, 0, 0),\\n                end: new Date(2019, 6, 27, 6, 0, 0),\\n                children: <div style={allDayStyle}>July 25th 8:00 ~ July 27th 6:00</div>,\\n            },\\n            {\\n                key: '9',\\n                start: new Date(2019, 6, 26, 10, 0, 0),\\n                end: new Date(2019, 6, 27, 16, 0, 0),\\n                children: <div style={allDayStyle}>July 26th 10:00 ~ July 27th 16:00</div>,\\n            },\\n        ];\\n        const displayValue = new Date(2019, 6, 23, 8, 32, 0);\\n        return (\\n            <>\\n                <RadioGroup onChange={e => this.onSelect(e)} value={mode}>\\n                    <Radio value={'day'}>Day view</Radio>\\n                    <Radio value={'week'}>Week view</Radio>\\n                    <Radio value={'month'}>Month view</Radio>\\n                    <Radio value={'range'}>Multi-day view</Radio>\\n                </RadioGroup>\\n                <br />\\n                <br />\\n                <Calendar\\n                    height={400}\\n                    mode={mode}\\n                    displayValue={displayValue}\\n                    events={events}\\n                    range={mode === 'range' ? [new Date(2019, 6, 23), new Date(2019, 6, 26)] : []}\\n                ></Calendar>\\n            </>\\n        );\\n    }\\n}\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Custom Render\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dateGridRender\"), \" to render customized date cell or column. Use absolute positioning for elements.\"), mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Custom Render Events\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true dir=\\\"column\\\"\",\n    \"live\": \"true\",\n    \"dir\": \"\\\"column\\\"\"\n  }, \"import React from 'react';\\nimport { Calendar } from '@douyinfe/semi-ui';\\n\\n() => {\\n    const dailyEventStyle = {\\n        position: 'absolute',\\n        left: '0',\\n        right: '0',\\n        borderRadius: '3px',\\n        boxSizing: 'border-box',\\n        border: 'var(--semi-color-primary) 1px solid',\\n        padding: '10px',\\n        backgroundColor: 'var(--semi-color-primary-light-default)',\\n        overflow: 'hidden'\\n    };\\n    const displayValue = new Date(2019, 6, 23, 8, 32, 0);\\n    const dateRender = (dateString) => {\\n        if (dateString === new Date(2019, 6, 23).toString()) {\\n            return (\\n                <>\\n                    <div style={{...dailyEventStyle, top: '500px', height: 50}}>Eating \\uD83C\\uDF70</div>\\n                    <div style={{...dailyEventStyle, top: '0', height: 400}}>Sleeping \\uD83D\\uDE2A</div>\\n                    <div style={{...dailyEventStyle, top: '700px', height: 100}}>Playstation \\uD83C\\uDFAE</div>\\n                </>\\n            );\\n        } else {\\n            return null;\\n        }\\n    };\\n    return (\\n        <Calendar \\n            height={700}\\n            mode='week'\\n            displayValue={displayValue} \\n            dateGridRender={dateRender}\\n        />\\n    );\\n};\\n\")), mdx(\"h4\", {\n    parentName: \"section\"\n  }, \"Customized Date Cell Style\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You could alos use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"dateGridRender\"), \" to customize date cell style, e.g. backgroundColor. Please notice that in Month View, the date text on the right corner has a z-index of 3. Use a larger z-index if you would like to cover the text as well.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true dir=\\\"column\\\"\",\n    \"live\": \"true\",\n    \"dir\": \"\\\"column\\\"\"\n  }, \"import React from 'react';\\nimport { Calendar } from '@douyinfe/semi-ui';\\n\\n() => {\\n    const importantDate = {\\n        position: 'absolute',\\n        left: '0',\\n        right: '0',\\n        top: '0',\\n        bottom: '0',\\n        backgroundColor: 'var(--semi-color-danger-light-default)',\\n    };\\n    const displayValue = new Date(2019, 6, 23, 8, 32, 0);\\n    const importDates = [\\n        new Date(2019, 6, 2),\\n        new Date(2019, 6, 8),\\n        new Date(2019, 6, 19),\\n        new Date(2019, 6, 23)\\n    ];\\n    const dateRender = (dateString) => {\\n        if (importDates.filter(date => date.toString() === dateString).length) {\\n            return (\\n                <div style={importantDate} />\\n            );\\n        } \\n        return null;\\n    };\\n    return (\\n        <Calendar \\n            height={700}\\n            mode='month'\\n            displayValue={displayValue} \\n            dateGridRender={dateRender}\\n        />\\n    );\\n};\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"API Reference\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Calendar\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"dateGridRender\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Custom render for date cell or column. Use absolute positioning for elements. \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"v>=1.0.0\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"function(dateString: string, date: Date)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"displayValue\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Display date\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Date\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"current date\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"events\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Events for rendering, refer to event object\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"EventObject[]\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"header\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Header\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"React.Node\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"height\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Height\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\", \"|\", \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"600\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"markWeekend\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Toggle whether to distinguish weekend column with grey background from weekdays\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"false\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Mode, one of \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"day\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"week\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"month\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"range\"), \"(\", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \">=1.5.0\"), \")\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"\\\"day\\\" \", \"|\", \" \\\"week\\\" \", \"|\", \" \\\"month\\\" \", \"|\", \" \\\"range\\\"\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"week\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onClick\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback invoked when clicking on date, basic unit for day and week mode is 0.5h, for month mode is 1d\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"function(e: Event, date: Date\\uFF09\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"onClose\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Callback invoked when event display card close in the month mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"function(e: Event\\uFF09\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"renderTimeDisplay\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Customize the display of time in day/week mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"function(time: number): ReactNode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"range\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Date range to display in range mode, left-closed and right-open \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"v>=1.5.0\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Date[]\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"scrollTop\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Scroll height for displayed content in day and week mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"400\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"showCurrTime\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Toggle whether to show red line of current time\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"true\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"width\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Width\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\", \"|\", \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")))), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Event Object\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"events\"), \" is an array of event objects.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"By default, when the event is an all day event without start or end time, it will be put into \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"displayValue\"), \". If an event is not an all-day event, it must has at least start or end time as a valid input.\"), mdx(Notice, {\n    type: \"primary\",\n    title: \"Attention\",\n    mdxType: \"Notice\"\n  }, \"Key property is required and must be unique. It is used for events update and re-render.\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"allDay\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether it is an all-day event\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"false\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"children\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Displayed content\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"React.node\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"end\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"End time of the event\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Date\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"key\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Required and must be unique. \", mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"v>=1.0.0\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"start\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Start time of the event\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Date\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Design Tokens\"), mdx(DesignToken, {\n    mdxType: \"DesignToken\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"en-US/show/calendar","next":{"fields":{"slug":"zh-CN/show/calendar"},"id":"b302051f-9efd-55dd-98de-9be53ada61f1","frontmatter":{"title":"Calendar 日历","localeCode":"zh-CN","icon":"doc-calendar"}},"previous":{"fields":{"slug":"zh-CN/show/badge"},"id":"1a240e25-b74b-5a7a-9ec8-1faa776d875d","frontmatter":{"title":"Badge 徽章","localeCode":"zh-CN","icon":"doc-badge"}}}},"staticQueryHashes":["1348983216","1348983216","1477422646","2732170773","63159454"]}