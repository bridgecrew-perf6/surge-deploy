{"componentChunkName":"component---src-templates-post-template-js","path":"/en-US/show/collapsible","result":{"data":{"current":{"frontmatter":{"title":"Collapsible","order":47,"brief":"The collapsible component is a container component used to put long sections of information under a block that can be expanded or collapsed.","icon":"doc-collapsible"},"fields":{"type":"show"},"tableOfContents":{"items":[{"url":"#when-to-use","title":"When to use"},{"url":"#demos","title":"Demos","items":[{"url":"#how-to-import","title":"How to import"},{"url":"#basic-usage","title":"Basic Usage"},{"url":"#custom-animation-duration","title":"Custom Animation Duration"},{"url":"#nested-use","title":"Nested use"},{"url":"#custom-collapseheight","title":"Custom CollapseHeight"}]},{"url":"#api-reference","title":"API reference"},{"url":"#accessibility","title":"Accessibility","items":[{"url":"#aria","title":"ARIA"}]},{"url":"#faq","title":"FAQ"}]},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"localeCode\": \"en-US\",\n  \"order\": 47,\n  \"category\": \"Show\",\n  \"title\": \"Collapsible\",\n  \"subTitle\": \"Collapsible\",\n  \"icon\": \"doc-collapsible\",\n  \"brief\": \"The collapsible component is a container component used to put long sections of information under a block that can be expanded or collapsed.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"When to use\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Collapsible\"), \"is a behavior component with animation effect by default. It is used in various components in Semi Components, including: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Navigation\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Collapse\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Tree\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TreeSelect\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Typography\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"When the above components do not meet requirements or customized collapsed behavior, you can use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Collapsible\"), \" to put in contents that need to be expanded or folded.\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Demos\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"How to import\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"import\",\n    \"import\": true\n  }, \"import { Collapsible } from '@douyinfe/semi-ui';\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Basic Usage\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"isOpen\"), \" to control the expansion or folding of the content.\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true hideInDSM\",\n    \"live\": \"true\",\n    \"hideInDSM\": true\n  }, \"import React, { useState } from 'react';\\nimport { Collapsible, Button } from '@douyinfe/semi-ui';\\n\\n() => {\\n    const [isOpen ,setOpen] = useState();\\n    const toggle = () => {\\n        setOpen(!isOpen);\\n    };\\n    const collapsed = (\\n        <ul>\\n            <li>Nothing can ever happen twice.</li>\\n            <li>In consequence, the sorry fact is</li>\\n            <li>that we arrive here improvised</li>\\n            <li>and leave without the chance to practice. </li>\\n        </ul>\\n    );\\n    return (\\n        <div>\\n            <Button onClick={toggle}>Toggle</Button>\\n            <Collapsible isOpen={isOpen}>{collapsed}</Collapsible>\\n        </div>\\n    );\\n};\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Custom Animation Duration\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"duration\"), \" to set animation duration or turn off animation by setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"motion={false}\"), \".\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true hideInDSM\",\n    \"live\": \"true\",\n    \"hideInDSM\": true\n  }, \"import React, { useState } from 'react';\\nimport { Collapsible, InputNumber, Button } from '@douyinfe/semi-ui';\\n\\n() => {\\n    const [isOpen, setOpen] = useState(false);\\n    const [duration, setDuration] = useState(250);\\n    const toggle = () => {\\n        setOpen(!isOpen);\\n    };\\n    const collapsed = (\\n        <ul>\\n            <li>Nothing can ever happen twice.</li>\\n            <li>In consequence, the sorry fact is</li>\\n            <li>that we arrive here improvised</li>\\n            <li>and leave without the chance to practice. </li>\\n        </ul>\\n    );\\n    return (\\n        <div>\\n            <label>Set animation duration\\uFF1A</label>\\n            <InputNumber min={0} defaultValue={250} style={{ width: 120 }} onChange={(val) => setDuration(val)} step={10} />\\n            <br />\\n            <Button onClick={toggle}>Toggle</Button>\\n            <Collapsible isOpen={isOpen} duration={duration}>\\n                {collapsed}\\n            </Collapsible>\\n        </div>\\n    );\\n};\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Nested use\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true hideInDSM\",\n    \"live\": \"true\",\n    \"hideInDSM\": true\n  }, \"import React from 'react';\\nimport { Collapsible, Button } from '@douyinfe/semi-ui';\\n\\n() => {\\n    const [isOpen, setOpen] = useState(false);\\n    const [isChildOpen, setChildOpen] = useState(false);\\n\\n    const collapsed = (\\n        <ul>\\n            <li>Nothing can ever happen twice.</li>\\n            <li>In consequence, the sorry fact is</li>\\n            <li>that we arrive here improvised</li>\\n            <li>and leave without the chance to practice. </li>\\n        </ul>\\n    );\\n    return (\\n        <div>\\n            <Button onClick={() => setOpen(!isOpen)}>Toggle</Button>\\n            <br />\\n            <Collapsible isOpen={isOpen}>\\n                <div>\\n                    <span>Conntent of first level</span>\\n                    <Button onClick={() => setChildOpen(!isChildOpen)}>Toggle List</Button>\\n                </div>\\n                <Collapsible isOpen={isChildOpen}>{collapsed}</Collapsible>\\n            </Collapsible>\\n        </div>\\n    );\\n};\\n\")), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"Custom CollapseHeight\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"You could use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"collapseHeight\"), \" to customize collapsed height. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"v>=1.0.0\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=true hideInDSM\",\n    \"live\": \"true\",\n    \"hideInDSM\": true\n  }, \"import React, { useState } from 'react';\\nimport { Collapsible, Button } from '@douyinfe/semi-ui';\\n\\n() => {\\n    const [isOpen, setOpen] = useState(false);\\n    const maskStyle = isOpen\\n        ? {}\\n        : {\\n            WebkitMaskImage:\\n                    'linear-gradient(to bottom, black 0%, rgba(0, 0, 0, 1) 60%, rgba(0, 0, 0, 0.2) 80%, transparent 100%)',\\n        };\\n    const collapsed = (\\n        <ul>\\n            <li>Nothing can ever happen twice.</li>\\n            <li>In consequence, the sorry fact is</li>\\n            <li>that we arrive here improvised</li>\\n            <li>and leave without the chance to practice. </li>\\n        </ul>\\n    );\\n    const toggle = () => {\\n        setOpen(!isOpen);\\n    };\\n    const linkStyle = {\\n        position: 'absolute',\\n        left: 0,\\n        right: 0,\\n        textAlign: 'center',\\n        bottom: -10,\\n        fontWeight: 700,\\n        cursor: 'pointer',\\n    };\\n    return (\\n        <>\\n            <Button onClick={toggle}>Toggle</Button>\\n            <div style={{ position: 'relative' }}>\\n                <Collapsible isOpen={isOpen} collapseHeight={60} style={{ ...maskStyle }}>\\n                    {collapsed}\\n                </Collapsible>\\n                {isOpen ? null : (\\n                    <a onClick={toggle} style={{ ...linkStyle }}>\\n                        + Show More\\n                    </a>\\n                )}\\n            </div>\\n        </>\\n    );\\n};\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"API reference\"), mdx(\"table\", {\n    parentName: \"section\"\n  }, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Properties\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Instructions\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"version\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"className\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Class name\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.34.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"collapseHeight\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Collapse height\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.0.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"duration\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Time of animation execution\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"250\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"isOpen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Toggle whether to expand the content area\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"keepDOM\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Whether to keep the hidden panel in DOM tree, destroyed by default\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"boolean\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"false\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.25.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"motion\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Toggle whether to turn on animation\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Motion\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"true\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"reCalcKey\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"When reCalcKey changes, the height of children will be reset. Used for optimize dynamic content rendering.\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"number \", \"|\", \" string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"1.5.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"style\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Style object\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CSSProperties\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"0.34.0\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"aria-controls\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls\"\n  }, \"aria-controls\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"string\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"-\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"2.3.0\"))))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Accessibility\"), mdx(\"h3\", {\n    parentName: \"section\"\n  }, \"ARIA\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Collapsible has \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\"), \" props, the value passed in will be set as the id of the wrapper element, which can be used with other components' \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"aria-controls\"), \" to indicate the control relationship, see the usage example below.\")), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import Collapsible from './index';\\n\\n\\n()=>{\\n    const collapseId = 'myCollapsible';\\n    const [visible,setVisible]=useState(false);\\n    return <>\\n        <Button onClick={()=>setVisible(!visible)} aria-controls={`${collapseId}`}>{visible?'hide':'show'}</Button>\\n        <Collapsible isOpen={visible} id={collapseId}>\\n            <div>hide content</div>\\n        </Collapsible>\\n    </>\\n}\\n\\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"FAQ\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Why Collapsible does not expand as expected?\", mdx(\"br\", {\n    parentName: \"li\"\n  }), \"Check if the display of parent item of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Collapsible\"), \" once was set to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"none\"), \". In this case, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Collapsible\"), \" could not get height of node properly. If this is not the issue, contact Semi developers to see if other issues exist.\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"en-US/show/collapsible","next":{"fields":{"slug":"zh-CN/show/collapsible"},"id":"9430f5d5-bbab-5088-88e1-944521a51a81","frontmatter":{"title":"Collapsible 折叠","localeCode":"zh-CN","icon":"doc-collapsible"}},"previous":{"fields":{"slug":"zh-CN/show/collapse"},"id":"3a3e27a9-fad8-515e-ab34-4a5075061005","frontmatter":{"title":"Collapse 折叠面板","localeCode":"zh-CN","icon":"doc-accordion"}}}},"staticQueryHashes":["1348983216","1348983216","1477422646","2732170773","63159454"]}